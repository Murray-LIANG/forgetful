<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>etcd on Forgetful :/</title>
    <link>http://localhost:1313/forgetful/tags/etcd/</link>
    <description>Recent content in etcd on Forgetful :/</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright>
    <lastBuildDate>Mon, 10 Feb 2020 16:37:31 +0800</lastBuildDate><atom:link href="http://localhost:1313/forgetful/tags/etcd/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Etcd</title>
      <link>http://localhost:1313/forgetful/2020/02/etcd/</link>
      <pubDate>Mon, 10 Feb 2020 16:37:31 +0800</pubDate>
      
      <guid>http://localhost:1313/forgetful/2020/02/etcd/</guid>
      <description>etcd is a highly available key-value store.
redis, memcached are popular key-value stores. These are general-purpose distributed memory caching system often used to speed up dynamic database-driven websites by caching data and objects in memory.
etcd cannot be stored in memory, they can only be persisted in disk storage, whereas redis can be cached in ram and can also be persisted in disk.
etcd does not have various data types. But redis and other key-value stores have data-type flexibility.</description>
    </item>
    
    <item>
      <title>From Etcd v2 to v3</title>
      <link>http://localhost:1313/forgetful/2020/02/etcd-v2-to-v3/</link>
      <pubDate>Mon, 10 Feb 2020 16:37:31 +0800</pubDate>
      
      <guid>http://localhost:1313/forgetful/2020/02/etcd-v2-to-v3/</guid>
      <description>In etcd3, the base server interface uses gRPC instead of JSON for increased efficiency. Support for JSON endpoints is maintained through a gRPC gateway. The new API revisits the design of key expiry TTLs, replacing them with lightweight streaming lease keepalive model. Watchers are redesigned as well, replacing the older event model with one that streams and multiplexes events over key intervals. The v3 data model does away with explicit key hierarchies and unreliable watch windows, replacing them with a flat binary key space with transactional, multiversion concurrency control semantics.</description>
    </item>
    
  </channel>
</rss>
